<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sale.ljw.clinicsystem.backend.dao.personnel.DoctorinformationMapper">

    <resultMap id="BaseResultMap" type="sale.ljw.clinicsystem.backend.pojo.personnel.Doctorinformation">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="DATE"/>
        <result property="sex" column="sex" jdbcType="CHAR"/>
        <result property="identitynumber" column="identityNumber" jdbcType="CHAR"/>
        <result property="did" column="did" jdbcType="VARCHAR"/>
        <result property="salary" column="salary" jdbcType="DOUBLE"/>
        <result property="registereid" column="registereId" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="doctordelete" column="doctorDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,avatar,name,
        age,birthday,sex,
        identityNumber,did,salary,
        registereId,address,doctorDelete
    </sql>
    <select id="findAllDoctor" resultType="java.util.Map">
        SELECT doctorInformation.id,avatar,doctorInformation.name,age,DATE_FORMAT(birthday,'%Y-%m-%d')
        birthday,identityNumber,salary,address,department.name departmentName,general.value sex,regis.value regis,
                 sex sexCoding,birthday birthdayCoding,did,registereId
        FROM doctorInformation
        INNER JOIN department ON did=department.id
        INNER JOIN (SELECT r.id,VALUE FROM general,registrationLevel r WHERE NAME=coding) regis ON regis.id=registereId
        INNER JOIN general ON sex=general.coding
        WHERE 1=1
        <if test='name != null and name != "" '>
            AND doctorInformation.name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test='sex != null and sex != "" '>
            AND doctorInformation.sex = #{sex}
        </if>
        <if test='did != null and did != "" '>
            AND doctorInformation.did = #{did}
        </if>
        <if test='registereId != null and registereId != "" '>
            AND doctorInformation.registereId = #{registereId}
        </if>
        AND doctorDelete=0
    </select>
    <select id="mainGetNumber" resultType="java.util.Map">
        SELECT * FROM
         (SELECT COUNT(id) patientNumber FROM patientLogin) patient,
         (SELECT COUNT(id) doctorNumber FROM doctorLogin) doctor,
         (SELECT COUNT(id) drugNumber FROM drug) drug
    </select>
    <select id="findValueNumber" resultType="java.util.Map">
        SELECT  (SELECT COUNT(doctorInformation.id) FROM doctorInformation WHERE doctorDelete = 0) 医生数量,
                (SELECT COUNT(patientInformation.id) FROM patientInformation WHERE doctorDelete = 0)   患者数量,
                (SELECT COUNT(OrderForm.id) FROM OrderForm)  订单数量,
                COUNT(drug.id)                                          药品数量
        FROM drug
        WHERE drugDelete= 0
    </select>
    <select id="getDayMedicine" resultType="java.util.Map">
        SELECT DATE_FORMAT(reserveTime, '%m月%d日') days, COUNT(id) COUNT
        FROM reserve
        GROUP BY days;
    </select>
    <select id="getStateStatistics" resultType="java.util.Map">
        SELECT COUNT(reserve.id) value,general.value name
        FROM reserve
            INNER JOIN OrderForm ON OrderForm.id=reserve.id
            INNER JOIN general ON general.coding=OrderForm.state
        GROUP BY OrderForm.state
    </select>
    <select id="getRegisDoctor" resultType="java.util.Map">
        SELECT COUNT(doctorDuty.id) value,general.value name
        FROM doctorDuty
            INNER JOIN general ON doctorDuty.dutyId=general.coding
            INNER JOIN doctorInformation ON doctorInformation.id=doctorDuty.id
        WHERE doctorInformation.doctorDelete=0
        GROUP BY dutyId;
    </select>
    <select id="getDeleteData" resultType="map">
        SELECT department.name dname,doctorInformation.name,general.value sex,doctorInformation.age,doctorInformation.id,doctorInformation.salary
        FROM doctorInformation
                 INNER JOIN department ON department.id=did
                 INNER JOIN general ON sex=coding
        WHERE doctorDelete=1
    </select>
    <delete id="permanentDeleteById" parameterType="string">
        DELETE
        FROM doctorInformation
        WHERE id = #{id} AND doctorDelete=1
    </delete>
    <select id="selectDeleteDataById" resultType="doctorinformation" parameterType="string">
        select *
        FROM doctorInformation
        WHERE id = #{id}
          AND doctorDelete = 1;
    </select>
    <update id="recoveryData" parameterType="string">
        UPDATE doctorInformation SET doctorDelete=0 WHERE id = #{id}
    </update>
    <select id="getDoctorListByDepartment" resultType="java.util.Map">
        SELECT doctorInformation.id id,doctorInformation.name,age,generalSex.value sex,generalRegis.value register,
               registrationLevel.id registraId,generalDrug.value duty,doctorDuty.dutyId dutyId
        FROM doctorInformation
                 INNER JOIN general generalSex ON doctorInformation.sex=coding
                 INNER JOIN registrationLevel ON doctorInformation.registereId=registrationLevel.id
                 INNER JOIN general generalRegis ON registrationLevel.name=generalRegis.coding
                 INNER JOIN doctorDuty ON doctorInformation.id=doctorDuty.id
                 INNER JOIN general generalDrug ON generalDrug.coding=doctorDuty.dutyId
        WHERE doctorInformation.did=#{departmentId};
    </select>
</mapper>
